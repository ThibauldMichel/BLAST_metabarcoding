pident
length
sacc
slen
evalue
bitscore
score
staxids' ",
"-evalue 1e-20",
"-remote",
"-max_target_seqs 5"#,
#"2> /dev/null"
)
)
# Formating the data with correct columns names:
# Load data:
df <- read.csv("../results/results.csv", sep="@")
# Define columns names:
columns_names <- c(
"qseqid",
"sseqid",
"pident",
"length",
"sacc",
"slen",
"evalue",
"bitscore",
"score",
"staxids"
)
# Input names in the matrix:
names(df) <- columns_names
df
tax <- as.list(df)
tax_id <- tax$staxids
tax_id
length(tax_id)
tax_list <- sapply(taxid, function(i) get_taxonomy(i))
tax_list <- sapply(tax_id, function(i) get_taxonomy(i))
#######################################################
get_taxonomy <- function(taxid) {
# Define NCBI database and rettype (return type)
db <- "taxonomy"
rettype <- "xml"
# Fetch taxonomy information using TaxID
taxonomy_xml <- entrez_fetch(db, id = taxid, rettype = rettype)
# Parse XML response
taxonomy_parsed <- xml2::read_xml(taxonomy_xml)
# Extract relevant taxonomy information
taxon <- xml2::xml_find_first(taxonomy_parsed, ".//Taxon")
species_name <- xml2::xml_text(xml2::xml_find_first(taxon, ".//ScientificName"))
lineage <- xml2::xml_text(xml2::xml_find_first(taxon, ".//Lineage"))
# Combine species name and lineage into a single output
output <- paste(lineage, species_name)
# Return combined output
return(output)
}
tax_list <- sapply(tax_id, function(i) get_taxonomy(i))
# Initialize an empty list
output_list <- list()
# Loop over taxid and store the results in output_list
for (i in tax_id) {
result <- get_taxonomy(i)  # Assuming get_taxonomy function is defined
output_list <- c(output_list, list(result))
}
# To prevent memory problems in fetching data from NCBI:
library(httr)
set_config(use_proxy(url="10.3.100.207",port=8080))
# Loop over taxid and store the results in output_list
for (i in tax_id) {
result <- get_taxonomy(i)  # Assuming get_taxonomy function is defined
output_list <- c(output_list, list(result))
}
# To prevent memory problems in fetching data from NCBI:
library(httr)
set_config(use_proxy(url="10.3.100.207",port=8080))
# Loop over taxid and store the results in output_list
for (i in tax_id) {
result <- get_taxonomy(i)  # Assuming get_taxonomy function is defined
output_list <- c(output_list, list(result))
}
# Loop with sapply:
tax_list <- sapply(tax_id, function(i) get_taxonomy(i))
library(rentrez)
# Giving the path to the BLAST script.
blastn <- "blastn"
# Make the blast.
system2(
blastn,
args = c(
"-db nt",
"-query ../data/queries.fasta",
"-out ../results/results.csv",
"-outfmt '6 delim=@
qseqid
sseqid
pident
length
sacc
slen
evalue
bitscore
score
staxids' ",
"-evalue 1e-20",
"-remote",
"-max_target_seqs 5"#,
#"2> /dev/null"
)
)
# Formating the data with correct columns names:
# Load data:
df <- read.csv("../results/results.csv", sep="@")
df
# Define columns names:
columns_names <- c(
"qseqid",
"sseqid",
"pident",
"length",
"sacc",
"slen",
"evalue",
"bitscore",
"score",
"staxids"
)
# Input names in the matrix:
names(df) <- columns_names
df
tax <- as.list(df)
tax_id <- tax$staxids
# Loop with sapply:
tax_list <- sapply(tax_id, function(i) get_taxonomy(i))
#######################################################
get_taxonomy <- function(taxid) {
# Define NCBI database and rettype (return type)
db <- "taxonomy"
rettype <- "xml"
# Fetch taxonomy information using TaxID
taxonomy_xml <- entrez_fetch(db, id = taxid, rettype = rettype)
# Parse XML response
taxonomy_parsed <- xml2::read_xml(taxonomy_xml)
# Extract relevant taxonomy information
taxon <- xml2::xml_find_first(taxonomy_parsed, ".//Taxon")
species_name <- xml2::xml_text(xml2::xml_find_first(taxon, ".//ScientificName"))
lineage <- xml2::xml_text(xml2::xml_find_first(taxon, ".//Lineage"))
# Combine species name and lineage into a single output
output <- paste(lineage, species_name)
# Return combined output
return(output)
}
# Loop with sapply:
tax_list <- sapply(tax_id, function(i) get_taxonomy(i))
tax_list
tax_id
length(tax_id)
df
# Implement this list as a column in the matrix:
df['Taxonomy'] <- tax_list
df
# Define taxonomy function:
# Function to retrieve taxonomy information using TaxID
get_taxonomy <- function(taxid) {
# Define NCBI database and rettype (return type)
db <- "taxonomy"
rettype <- "xml"
# Fetch taxonomy information using TaxID
taxonomy_xml <- entrez_fetch(db, id = taxid, rettype = rettype)
# Parse XML response
taxonomy_parsed <- xml2::read_xml(taxonomy_xml)
# Extract relevant taxonomy information
taxon <- xml2::xml_find_first(taxonomy_parsed, ".//Taxon")
species_name <- xml2::xml_text(xml2::xml_find_first(taxon, ".//ScientificName"))
lineage <- xml2::xml_text(xml2::xml_find_first(taxon, ".//Lineage"))
# Combine species name and lineage into a single output
output <- paste(lineage, ",", species_name)
# Return combined output
return(output)
}
# Loop through the ID list, and get the taxonomy data
# Get list taxid:
tax <- as.list(df)
tax_id <- tax$staxids
# Loop with sapply:
tax_list <- sapply(tax_id, function(i) get_taxonomy(i))
# Loop with sapply:
tax_list <- sapply(tax_id, function(i) get_taxonomy(i))
tax_list
# Implement this list as a column in the matrix:
df['Taxonomy', 'Species'] <- tax_list
# Implement this list as a column in the matrix:
df['Taxonomy'] <- tax_list
df
# Define taxonomy function:
# Function to retrieve taxonomy information using TaxID
get_taxonomy <- function(taxid) {
# Define NCBI database and rettype (return type)
db <- "taxonomy"
rettype <- "xml"
# Fetch taxonomy information using TaxID
taxonomy_xml <- entrez_fetch(db, id = taxid, rettype = rettype)
# Parse XML response
taxonomy_parsed <- xml2::read_xml(taxonomy_xml)
# Extract relevant taxonomy information
taxon <- xml2::xml_find_first(taxonomy_parsed, ".//Taxon")
species_name <- xml2::xml_text(xml2::xml_find_first(taxon, ".//ScientificName"))
lineage <- xml2::xml_text(xml2::xml_find_first(taxon, ".//Lineage"))
# Combine species name and lineage into a single output
output <- paste(lineage, "\t", species_name)
# Return combined output
return(output)
}
# Loop through the ID list, and get the taxonomy data
# Get list taxid:
tax <- as.list(df)
tax_id <- tax$staxids
# Loop with sapply:
tax_list <- sapply(tax_id, function(i) get_taxonomy(i))
# Loop with sapply:
tax_list <- sapply(tax_id, function(i) get_taxonomy(i))
# Combine species name and lineage into a single output
output <- paste(lineage, species_name)
# Define taxonomy function:
# Function to retrieve taxonomy information using TaxID
get_taxonomy <- function(taxid) {
# Define NCBI database and rettype (return type)
db <- "taxonomy"
rettype <- "xml"
# Fetch taxonomy information using TaxID
taxonomy_xml <- entrez_fetch(db, id = taxid, rettype = rettype)
# Parse XML response
taxonomy_parsed <- xml2::read_xml(taxonomy_xml)
# Extract relevant taxonomy information
taxon <- xml2::xml_find_first(taxonomy_parsed, ".//Taxon")
species_name <- xml2::xml_text(xml2::xml_find_first(taxon, ".//ScientificName"))
lineage <- xml2::xml_text(xml2::xml_find_first(taxon, ".//Lineage"))
# Combine species name and lineage into a single output
output <- paste(lineage, species_name)
# Return combined output
return(output)
}
# Loop through the ID list, and get the taxonomy data
# Get list taxid:
tax <- as.list(df)
tax_id <- tax$staxids
# Loop with sapply:
tax_list <- sapply(tax_id, function(i) get_taxonomy(i))
tax_list
# Define taxonomy function:
# Function to retrieve taxonomy information using TaxID
get_lineage <- function(taxid) {
# Define NCBI database and rettype (return type)
db <- "taxonomy"
rettype <- "xml"
# Fetch taxonomy information using TaxID
taxonomy_xml <- entrez_fetch(db, id = taxid, rettype = rettype)
# Parse XML response
taxonomy_parsed <- xml2::read_xml(taxonomy_xml)
# Extract relevant taxonomy information
taxon <- xml2::xml_find_first(taxonomy_parsed, ".//Taxon")
species_name <- xml2::xml_text(xml2::xml_find_first(taxon, ".//ScientificName"))
lineage <- xml2::xml_text(xml2::xml_find_first(taxon, ".//Lineage"))
# Combine species name and lineage into a single output
output <- paste(lineage)
# Return combined output
return(output)
}
get_species <- function(taxid) {
# Define NCBI database and rettype (return type)
db <- "taxonomy"
rettype <- "xml"
# Fetch taxonomy information using TaxID
taxonomy_xml <- entrez_fetch(db, id = taxid, rettype = rettype)
# Parse XML response
taxonomy_parsed <- xml2::read_xml(taxonomy_xml)
# Extract relevant taxonomy information
taxon <- xml2::xml_find_first(taxonomy_parsed, ".//Taxon")
species_name <- xml2::xml_text(xml2::xml_find_first(taxon, ".//ScientificName"))
lineage <- xml2::xml_text(xml2::xml_find_first(taxon, ".//Lineage"))
# Combine species name and lineage into a single output
output <- paste(species_name)
# Return combined output
return(output)
}
# Define taxonomy function:
# Function to retrieve taxonomy information using TaxID
get_lineage <- function(taxid) {
# Define NCBI database and rettype (return type)
db <- "taxonomy"
rettype <- "xml"
# Fetch taxonomy information using TaxID
taxonomy_xml <- entrez_fetch(db, id = taxid, rettype = rettype)
# Parse XML response
taxonomy_parsed <- xml2::read_xml(taxonomy_xml)
# Extract relevant taxonomy information
taxon <- xml2::xml_find_first(taxonomy_parsed, ".//Taxon")
species_name <- xml2::xml_text(xml2::xml_find_first(taxon, ".//ScientificName"))
lineage <- xml2::xml_text(xml2::xml_find_first(taxon, ".//Lineage"))
# Combine species name and lineage into a single output
output <- paste(lineage)
# Return combined output
return(output)
}
get_species <- function(taxid) {
# Define NCBI database and rettype (return type)
db <- "taxonomy"
rettype <- "xml"
# Fetch taxonomy information using TaxID
taxonomy_xml <- entrez_fetch(db, id = taxid, rettype = rettype)
# Parse XML response
taxonomy_parsed <- xml2::read_xml(taxonomy_xml)
# Extract relevant taxonomy information
taxon <- xml2::xml_find_first(taxonomy_parsed, ".//Taxon")
species_name <- xml2::xml_text(xml2::xml_find_first(taxon, ".//ScientificName"))
lineage <- xml2::xml_text(xml2::xml_find_first(taxon, ".//Lineage"))
# Combine species name and lineage into a single output
output <- paste(species_name)
# Return combined output
return(output)
}
# Loop through the ID list, and get the taxonomy data
# Get list taxid:
tax <- as.list(df)
tax_id <- tax$staxids
# Loop with sapply:
lin_list <- sapply(tax_id, function(i) get_lineage(i))
# Loop with sapply:
lin_list <- sapply(tax_id, function(i) get_lineage(i))
spe_list <- sapply(tax_id, function(i) get_species(i))
# Implement this list as a column in the matrix:
df['Taxonomy'] <- lin_list
df['Species'] <- spe_list
df
get_taxonomy <- function(taxid) {
# Load taxize package
library(taxize)
# Get taxonomic lineage
lineage <- tax_name(get_taxid_lineage(taxid))
# Extract species name
species <- lineage$scientific_name
# Construct taxonomy string
taxonomy <- paste("Kingdom:", lineage$Kingdom,
"Phylum:", lineage$Phylum,
"Class:", lineage$Class,
"Order:", lineage$Order,
"Family:", lineage$Family,
"Genus:", lineage$Genus,
"Species:", species, sep = "\n")
return(taxonomy)
}
taxid <- 9606  # Human
taxonomy <- get_taxonomy(taxid)
install.packages('taxize')
get_taxonomy <- function(taxid) {
# Load taxize package
library(taxize)
# Get taxonomic lineage
lineage <- tax_name(get_taxid_lineage(taxid))
# Extract species name
species <- lineage$scientific_name
# Construct taxonomy string
taxonomy <- paste("Kingdom:", lineage$Kingdom,
"Phylum:", lineage$Phylum,
"Class:", lineage$Class,
"Order:", lineage$Order,
"Family:", lineage$Family,
"Genus:", lineage$Genus,
"Species:", species, sep = "\n")
return(taxonomy)
}
taxid <- 9606  # Human
taxonomy <- get_taxonomy(taxid)
library(rentrez)
# Giving the path to the BLAST script.
blastn <- "blastn"
#############################################################################################################
# Make the blast.
system2(
blastn,
args = c(
"-db nt",
"-query ../data/queries.fasta",
"-out ../results/results.csv",
"-outfmt '6 delim=@
qseqid
sseqid
pident
length
sacc
slen
evalue
bitscore
score
staxids' ",
"-evalue 1e-20",
"-remote",
"-max_target_seqs 5"#,
#"2> /dev/null"
)
)
# Formating the data with correct columns names:
# Load data:
df <- read.csv("../results/results.csv", sep="@")
# Define columns names:
columns_names <- c(
"qseqid",
"sseqid",
"pident",
"length",
"sacc",
"slen",
"evalue",
"bitscore",
"score",
"staxids"
)
# Input names in the matrix:
names(df) <- columns_names
# Define taxonomy function:
# Function to retrieve taxonomy information using TaxID
get_lineage <- function(taxid) {
# Define NCBI database and rettype (return type)
db <- "taxonomy"
rettype <- "xml"
# Fetch taxonomy information using TaxID
taxonomy_xml <- entrez_fetch(db, id = taxid, rettype = rettype)
# Parse XML response
taxonomy_parsed <- xml2::read_xml(taxonomy_xml)
# Extract relevant taxonomy information
taxon <- xml2::xml_find_first(taxonomy_parsed, ".//Taxon")
species_name <- xml2::xml_text(xml2::xml_find_first(taxon, ".//ScientificName"))
lineage <- xml2::xml_text(xml2::xml_find_first(taxon, ".//Lineage"))
# Combine species name and lineage into a single output
output <- paste(lineage)
# Return combined output
return(output)
}
get_species <- function(taxid) {
# Define NCBI database and rettype (return type)
db <- "taxonomy"
rettype <- "xml"
# Fetch taxonomy information using TaxID
taxonomy_xml <- entrez_fetch(db, id = taxid, rettype = rettype)
# Parse XML response
taxonomy_parsed <- xml2::read_xml(taxonomy_xml)
# Extract relevant taxonomy information
taxon <- xml2::xml_find_first(taxonomy_parsed, ".//Taxon")
species_name <- xml2::xml_text(xml2::xml_find_first(taxon, ".//ScientificName"))
lineage <- xml2::xml_text(xml2::xml_find_first(taxon, ".//Lineage"))
# Combine species name and lineage into a single output
output <- paste(species_name)
# Return combined output
return(output)
}
# Return combined output
return(output)
# Define NCBI database and rettype (return type)
db <- "taxonomy"
rettype <- "xml"
# Fetch taxonomy information using TaxID
taxonomy_xml <- entrez_fetch(db, id = taxid, rettype = rettype)
get_species <- function(taxid) {
# Define NCBI database and rettype (return type)
db <- "taxonomy"
rettype <- "xml"
# Fetch taxonomy information using TaxID
taxonomy_xml <- entrez_fetch(db, id = taxid, rettype = rettype)
# Parse XML response
taxonomy_parsed <- xml2::read_xml(taxonomy_xml)
# Extract relevant taxonomy information
taxon <- xml2::xml_find_first(taxonomy_parsed, ".//Taxon")
species_name <- xml2::xml_text(xml2::xml_find_first(taxon, ".//ScientificName"))
lineage <- xml2::xml_text(xml2::xml_find_first(taxon, ".//Lineage"))
# Combine species name and lineage into a single output
output <- paste(species_name)
# Return combined output
return(output)
}
# Loop through the ID list, and get the taxonomy data
# Get list taxid:
tax <- as.list(df)
tax_id <- tax$staxids
# Loop with sapply:
lin_list <- sapply(tax_id, function(i) get_lineage(i))
spe_list <- sapply(tax_id, function(i) get_species(i))
# Implement this list as a column in the matrix:
df['Taxonomy'] <- lin_list
df['Species'] <- spe_list
df
# Save the table in format csv:
write.csv(df, "table_query.csv")
# Save the table in format csv:
write.csv(df, "../results/table_query.csv")
read_csv("Taxonomy_Ciguarisk_5hits_blast_6000ASVs_DM_v2+RT_Corrected.csv")
read.csv("Taxonomy_Ciguarisk_5hits_blast_6000ASVs_DM_v2+RT_Corrected.csv")
read.csv("../data/Taxonomy_Ciguarisk_5hits_blast_6000ASVs_DM_v2+RT_Corrected.csv")
table = read.csv("../data/Taxonomy_Ciguarisk_5hits_blast_6000ASVs_DM_v2+RT_Corrected.csv")
table["ASV number", "Seq"]
table <- read.csv("../data/Taxonomy_Ciguarisk_5hits_blast_6000ASVs_DM_v2+RT_Corrected.csv")
table["ASV number", "Seq"]
sub <- table["ASV number", "Seq"]
sub
sub <- table[c("ASV number", "Seq")]
sub <- subset(table, c("ASV number", "Seq"))
sub <- table[:, c("ASV number", "Seq")]
sub <- table[, c("ASV number", "Seq")]
sub <- table[c("ASV number", "Seq")]
table
sub <- table[c("ASV.number", "Seq")]
sub
head(sub)
